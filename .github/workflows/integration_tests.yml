name: Integration Tests

on:
  pull_request:
    paths:
      - src/**
      - integration/example-library/**
      - noxfile.py
      - pyproject.toml
      - uv.lock
      - .github/workflows/integration_tests.yml
      - .github/workflows/resources/constraints.txt
  push:
    branches: [main]
    paths:
      - src/**
      - integration/example-library/**
      - noxfile.py
      - pyproject.toml
      - uv.lock
      - .github/workflows/integration_tests.yml
      - .github/workflows/resources/constraints.txt
  workflow_dispatch:
    inputs: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  validate:
    name: Integration Tests
    strategy:
      matrix:
        include:
        - { integration_test: "meltano-basics", needs_postgres: false}
        - { integration_test: "meltano-run", needs_postgres: true}
        - { integration_test: "meltano-objects", needs_postgres: false}
        - { integration_test: "meltano-migrations", needs_postgres: false}
        - { integration_test: "meltano-state-s3", needs_postgres: false}
        - { integration_test: "meltano-state-local", needs_postgres: false}
        - { integration_test: "meltano-config", needs_postgres: false}
        - { integration_test: "meltano-annotations", needs_postgres: false}
        - { integration_test: "meltano-manifest", needs_postgres: false}
        - { integration_test: "meltano-run-merge-states", needs_postgres: false}
        - { integration_test: "meltano-expand-envvars-in-array", needs_postgres: false}
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        persist-credentials: false

    - name: Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      id: setup-python
      with:
        python-version: ${{ matrix.python || '3.13' }}
        architecture: x64

    - name: Setup uv
      uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v6.6.0

    - name: Install Dependencies
      env:
        UV_PYTHON: ${{ steps.setup-python.outputs.python-path }}
      run: |
        uv sync --extra "s3"

    - name: Start Postgres Container
      if: always() && (matrix.needs_postgres == true)
      run: >
        docker run -d
        -p "5432:5432"
        -e "POSTGRES_PASSWORD=postgres"
        -e "POSTGRES_DB=warehouse"
        --name postgres
        --health-cmd "pg_isready -d postgres -U postgres"
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5
        postgres:13

    - name: Run integration tests
      run: |
        uv run bash integration/validate.sh ${{ matrix.integration_test }}

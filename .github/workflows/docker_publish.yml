name: Docker Publish

# This workflow will build and publish all public Docker images to Docker Hub.
# Set the input `dry-run` to `false` to skip pushing images to Docker Hub.

# For now, only run manually
on:
  workflow_dispatch:
    inputs:
      dry-run:
        description: "Dry run (skip push step)"
        type: boolean
        required: true
        default: true

jobs:
  public_docker_build:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: meltano/meltano
      COMMIT_SHA: ${{ github.sha }}
      # Boolean values don't actually work so cast to 'true' and 'false'
      # https://github.com/actions/runner/issues/1483
      DRY_RUN_STR: ${{ format('{0}', github.event.inputs.dry-run) || 'true' }}

    strategy:
      fail-fast: false
      matrix:
        include:
        - python-version: "3.7"
          is-default-python: false
        - python-version: "3.8"
          is-default-python: false
        - python-version: "3.9"
          is-default-python: true # will be used in 'latest' images
        - python-version: "3.10"
          is-default-python: false

    steps:
    - uses: actions/checkout@v3

    - name: Get Meltano version
      id: get-meltano-version
      run: |
        pipx install poetry
        poetry version
        poetry version --short
        echo "::set-output name=release-version::$(poetry version --short)"

    - name: Print job inputs summary
      run: |
        echo "DRY_RUN=${{ env.DRY_RUN_STR }}"
        echo "PYTHON_VERSION=${{ matrix.python-version }}"
        echo "RELEASE_VERSION=${{ steps.get-meltano-version.outputs.release-version }}"
        echo "COMMIT_SHA=${{ github.sha }}"
        echo "DEBUG INFO: DRY_RUN is truthy=${{ env.DRY_RUN_STR == 'true' }}"
        echo "DEBUG INFO: DRY_RUN is falsey=${{ env.DRY_RUN_STR == 'false' }}"

    # These exist to show if 'dry-run' flag is set as intended and correctly parsed from inputs
    - name: Print dry-run message (if applicable)
      if: ${{ env.DRY_RUN_STR == 'true' }}
      run: |
        echo "DRY_RUN=${{ github.event.inputs.dry-run }}"
        echo "NOTE: This job is a dry run and will not publish any images."

    - name: Print publish message (if applicable)
      if: ${{ env.DRY_RUN_STR == 'false' }}
      run: |
        echo "DRY_RUN=${{ github.event.inputs.dry-run }}"
        echo "NOTE: This job is planning to publish the docker images."
        echo "⚠️ If this is not intended, please cancel this job."

    - name: Assemble image tags
      id: assemble-tags
      run: |
        [[ ${{ matrix.is-default-python }} == "true" ]] && echo "meltano/meltano:SHA-${{ github.sha }}" >> tags
        echo "meltano/meltano:v${{ steps.get-meltano-version.outputs.release-version }}-python${{ matrix.python-version }}" >> tags
        echo "meltano/meltano:latest-python${{ matrix.python-version }}" >> tags
        [[ ${{ matrix.is-default-python }} == "true" ]] && echo "meltano/meltano:latest" >> tags
        [[ ${{ matrix.is-default-python }} == "true" ]] && echo "meltano/meltano:v${{ steps.get-meltano-version.outputs.release-version }}" >> tags

        TAGS=$(cat tags)
        TAGS="${TAGS//'%'/'%25'}"
        TAGS="${TAGS//$'\n'/'%0A'}"
        TAGS="${TAGS//$'\r'/'%0D'}"

        echo "If this is not a dry run, the image will be published with the following tags:"
        cat tags
        echo "::set-output name=tags::$TAGS"

    - name: Build, scan, then conditionally push the Docker image for a given Python version
      uses: ./.github/actions/docker-build-scan-push
      with:
        push: ${{ env.DRY_RUN_STR == 'false' }}
        tags: ${{ steps.assemble-tags.output }}
        build-args: |
          PYTHON_VERSION=${{ matrix.python-version }}
          MELTANO_VERSION=${{ steps.get-meltano-version.outputs.release-version }}
        dockerhub-username: meltano
        dockerhub-password: ${{ secrets.DOCKERHUB_TOKEN }}
        python-version: ${{ matrix.python-version }}

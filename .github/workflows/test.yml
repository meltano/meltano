name: Tests

on:
  pull_request:
    paths:
      - src/**
      - tests/**
      - noxfile.py
      - pyproject.toml
      - uv.lock
      - .github/workflows/test.yml
      - .github/workflows/resources/constraints.txt
      - .github/workflows/resources/docker-compose.mssql.yaml
  push:
    branches: [main]
    paths:
      - src/**
      - tests/**
      - noxfile.py
      - pyproject.toml
      - uv.lock
      - .github/workflows/test.yml
      - .github/workflows/resources/constraints.txt
      - .github/workflows/resources/docker-compose.mssql.yaml
  workflow_dispatch:
    inputs: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  UV_PYTHON_DOWNLOADS: "never"

jobs:
  tests:
    strategy:
      matrix:
        include:
        - { python-version: '3.9',  os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py39-ubuntu-sqlite'  }
        - { python-version: '3.10', os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py310-ubuntu-sqlite' }
        - { python-version: '3.11', os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py311-ubuntu-sqlite' }
        - { python-version: '3.12', os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py312-ubuntu-sqlite' }
        - { python-version: '3.13', os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py313-ubuntu-sqlite' }
        - { python-version: '3.14', os: ubuntu-24.04-arm, backend-db: sqlite, id: 'py314-ubuntu-sqlite' }
        - { python-version: '3.9',  os: ubuntu-24.04-arm, backend-db: postgresql, id: 'py39-ubuntu-psycopg2'  }
        - { python-version: '3.10', os: ubuntu-24.04-arm, backend-db: postgresql, id: 'py310-ubuntu-psycopg2' }
        - { python-version: '3.11', os: ubuntu-24.04-arm, backend-db: postgresql, id: 'py311-ubuntu-psycopg2' }
        - { python-version: '3.12', os: ubuntu-24.04-arm, backend-db: postgresql, id: 'py312-ubuntu-psycopg2' }
        - { python-version: '3.13', os: ubuntu-24.04-arm, backend-db: postgresql, id: 'py313-ubuntu-psycopg2' }
        - { python-version: '3.9',  os: ubuntu-latest, backend-db: mssql, id: 'py39-ubuntu-mssql'  }
        - { python-version: '3.10', os: ubuntu-latest, backend-db: mssql, id: 'py310-ubuntu-mssql' }
        - { python-version: '3.11', os: ubuntu-latest, backend-db: mssql, id: 'py311-ubuntu-mssql' }
        - { python-version: '3.12', os: ubuntu-latest, backend-db: mssql, id: 'py312-ubuntu-mssql' }
        - { python-version: '3.13', os: ubuntu-latest, backend-db: mssql, id: 'py313-ubuntu-mssql' }
        # We'd like to run Windows tests for all backend-dbs see https://github.com/meltano/meltano/issues/6281
        - { python-version: '3.9',  os: windows-2025,  backend-db: sqlite, id: 'py39-windows-sqlite'  }
        - { python-version: '3.10', os: windows-2025,  backend-db: sqlite, id: 'py310-windows-sqlite' }
        - { python-version: '3.11', os: windows-2025,  backend-db: sqlite, id: 'py311-windows-sqlite' }
        - { python-version: '3.12', os: windows-2025,  backend-db: sqlite, id: 'py312-windows-sqlite' }
        - { python-version: '3.13', os: windows-2025,  backend-db: sqlite, id: 'py313-windows-sqlite' }
        - { python-version: '3.9',  os: ubuntu-24.04-arm, backend-db: postgresql_psycopg3, id: 'py39-ubuntu-psycopg3'  }
        - { python-version: '3.10', os: ubuntu-24.04-arm, backend-db: postgresql_psycopg3, id: 'py310-ubuntu-psycopg3' }
        - { python-version: '3.11', os: ubuntu-24.04-arm, backend-db: postgresql_psycopg3, id: 'py311-ubuntu-psycopg3' }
        - { python-version: '3.12', os: ubuntu-24.04-arm, backend-db: postgresql_psycopg3, id: 'py312-ubuntu-psycopg3' }
        - { python-version: '3.13', os: ubuntu-24.04-arm, backend-db: postgresql_psycopg3, id: 'py313-ubuntu-psycopg3' }
        - { python-version: '3.13', os: ubuntu-24.04-arm, backend-db: sqlite, markers: 'concurrent', id: 'concurrent-ubuntu'  }
        - { python-version: '3.13', os: windows-2025,  backend-db: sqlite, markers: 'concurrent', id: 'concurrent-windows' }
      fail-fast: false

    # GitHub doesn't handle matrix outputs well: https://stackoverflow.com/questions/70287603
    outputs:
      pytest-results-row-py39-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py39-ubuntu-sqlite }}
      pytest-results-row-py310-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py310-ubuntu-sqlite }}
      pytest-results-row-py311-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py311-ubuntu-sqlite }}
      pytest-results-row-py312-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py312-ubuntu-sqlite }}
      pytest-results-row-py313-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py313-ubuntu-sqlite }}
      pytest-results-row-py314-ubuntu-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py314-ubuntu-sqlite }}
      pytest-results-row-py39-ubuntu-psycopg2: ${{ steps.append-results.outputs.pytest-results-row-py39-ubuntu-psycopg2 }}
      pytest-results-row-py310-ubuntu-psycopg2: ${{ steps.append-results.outputs.pytest-results-row-py310-ubuntu-psycopg2 }}
      pytest-results-row-py311-ubuntu-psycopg2: ${{ steps.append-results.outputs.pytest-results-row-py311-ubuntu-psycopg2 }}
      pytest-results-row-py312-ubuntu-psycopg2: ${{ steps.append-results.outputs.pytest-results-row-py312-ubuntu-psycopg2 }}
      pytest-results-row-py313-ubuntu-psycopg2: ${{ steps.append-results.outputs.pytest-results-row-py313-ubuntu-psycopg2 }}
      pytest-results-row-py39-ubuntu-mssql: ${{ steps.append-results.outputs.pytest-results-row-py39-ubuntu-mssql }}
      pytest-results-row-py310-ubuntu-mssql: ${{ steps.append-results.outputs.pytest-results-row-py310-ubuntu-mssql }}
      pytest-results-row-py311-ubuntu-mssql: ${{ steps.append-results.outputs.pytest-results-row-py311-ubuntu-mssql }}
      pytest-results-row-py312-ubuntu-mssql: ${{ steps.append-results.outputs.pytest-results-row-py312-ubuntu-mssql }}
      pytest-results-row-py313-ubuntu-mssql: ${{ steps.append-results.outputs.pytest-results-row-py313-ubuntu-mssql }}
      pytest-results-row-py39-ubuntu-psycopg3: ${{ steps.append-results.outputs.pytest-results-row-py39-ubuntu-psycopg3 }}
      pytest-results-row-py310-ubuntu-psycopg3: ${{ steps.append-results.outputs.pytest-results-row-py310-ubuntu-psycopg3 }}
      pytest-results-row-py311-ubuntu-psycopg3: ${{ steps.append-results.outputs.pytest-results-row-py311-ubuntu-psycopg3 }}
      pytest-results-row-py312-ubuntu-psycopg3: ${{ steps.append-results.outputs.pytest-results-row-py312-ubuntu-psycopg3 }}
      pytest-results-row-py313-ubuntu-psycopg3: ${{ steps.append-results.outputs.pytest-results-row-py313-ubuntu-psycopg3 }}
      pytest-results-row-py39-windows-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py39-windows-sqlite }}
      pytest-results-row-py310-windows-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py310-windows-sqlite }}
      pytest-results-row-py311-windows-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py311-windows-sqlite }}
      pytest-results-row-py312-windows-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py312-windows-sqlite }}
      pytest-results-row-py313-windows-sqlite: ${{ steps.append-results.outputs.pytest-results-row-py313-windows-sqlite }}
      pytest-results-row-concurrent-ubuntu: ${{ steps.append-results.outputs.pytest-results-row-concurrent-ubuntu }}
      pytest-results-row-concurrent-windows: ${{ steps.append-results.outputs.pytest-results-row-concurrent-windows }}

    name: "Pytest on py${{ matrix.python-version }} (OS: ${{ matrix.os }}, DB: ${{ matrix.backend-db }}) (${{ matrix.markers || 'not concurrent' }})"
    runs-on: ${{ matrix.os }}
    continue-on-error: true
    timeout-minutes: 20
    env:
      PYTEST_MARKERS: ${{ matrix.markers || 'not concurrent' }}
      NOXFORCEPYTHON: ${{ matrix.python-version }}

    steps:
    - name: Check out the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
        check-latest: true
        allow-prereleases: true

    - name: Set up Docker Buildx
      if: always() && (matrix.backend-db == 'mssql')
      uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

    - name: Get Docker
      if: always() && (matrix.backend-db == 'mssql')
      uses: actions-hub/docker/cli@f5fdbfc3f9d2a9265ead8962c1314108a7b7ec5d # v1.0.3
      env:
        SKIP_LOGIN: true

    - name: Start Postgres Container
      if: always() && (matrix.backend-db == 'postgresql' || matrix.backend-db == 'postgresql_psycopg3')
      run: >
        docker compose -f .github/workflows/resources/docker-compose.postgres.yaml up -d --wait --quiet-pull

    - name: Start MSSQL Container
      if: always() && (matrix.backend-db == 'mssql')
      run: |
        docker compose -f .github/workflows/resources/docker-compose.mssql.yaml up -d --wait --quiet-pull

    - name: Check running containers
      run: |
        docker ps -a

    - name: Setup uv
      uses: astral-sh/setup-uv@7edac99f961f18b581bbd960d59d049f04c0002f # v6.4.1
      with:
        version: ">=0.6.15"

    - name: Install Nox
      env:
        UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/resources/constraints.txt
      run: |
        uv tool install nox

    - name: Run pytest
      env:
        SQLALCHEMY_WARN_20: 1
        COLUMNS: 160
        # Pytest
        PYTEST_BACKEND: ${{ matrix.backend-db }}
        PYTEST_MARKERS: ${{ env.PYTEST_MARKERS }}
        # Postgres backend
        POSTGRES_HOST_AUTH_METHOD: trust
        POSTGRES_ADDRESS: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: pytest_warehouse
        # MSSQL backend
        MSSQL_ADDRESS: localhost
        MSSQL_PORT: 1433
        MSSQL_USER: sa
        MSSQL_PASSWORD: Meltan0admin
        MSSQL_DB: pytest_warehouse
      shell: bash
      run: |
        nox --verbose -t test -- -m "${PYTEST_MARKERS}" 2>&1 | \
          tee >( \
            tail | sed -r "s/[[:cntrl:]]\[([0-9]{1,3};)*[0-9]{1,3}m//g" | grep -E '^=+ [0-9].+ =+$' | \
            { read pytest_results; echo "pytest_results='${pytest_results}'" >> ${GITHUB_ENV}; } )

    - name: Append row to workflow summary table
      id: append-results
      shell: bash
      run: |
        echo "pytest_results='${PYTEST_RESULTS}'"
        pytest_results_count () { pattern="([0-9]+) $1" && [[ ${PYTEST_RESULTS} =~ $pattern ]] && echo "${BASH_REMATCH[1]}" || echo 0; }
        echo "pytest-results-row-${{ matrix.id }}=| \
        ${{ matrix.python-version }} | \
        ${RUNNER_OS} ${RUNNER_ARCH,,} | \
        ${{ matrix.backend-db }} | \
        $( pytest_results_count passed ) | \
        $( pytest_results_count failed ) | \
        $( pytest_results_count xpassed ) | \
        $( pytest_results_count xfailed ) | \
        $( pytest_results_count skipped ) | \
        $( pytest_results_count deselected ) | \
        $( pytest_results_count warning ) | \
        $( pytest_results_count error ) | \
        $( pattern='in ([0-9]+)\.[0-9]+s' && [[ ${PYTEST_RESULTS} =~ $pattern ]] && echo "${BASH_REMATCH[1]}" )s |" >> $GITHUB_OUTPUT
      env:
        PYTEST_RESULTS: ${{ env.pytest_results }}

    - name: Upload coverage data
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        include-hidden-files: true
        name: coverage-data-${{ matrix.id }}
        path: ".coverage.*"

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      with:
        name: test-logs-${{ matrix.id }}
        path: pytest.log

  summary:
    name: Test summary table
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Summarize workflow
      run: |
        echo '## Test results' >> ${GITHUB_STEP_SUMMARY}
        echo '' >> ${GITHUB_STEP_SUMMARY}
        echo '| PYTHON | OS     | DB     | PASSED | FAILED | XPASSED | XFAILED | SKIPPED | DESELECTED | WARNINGS | ERRORS | DURATION |' >> ${GITHUB_STEP_SUMMARY}
        echo '|--------|--------|--------|--------|--------|---------|---------|---------|------------|----------|--------|----------|' >> ${GITHUB_STEP_SUMMARY}
        echo "${PY39_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY310_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY311_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY312_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY313_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY314_UBUNTU_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY39_UBUNTU_PSYCOPG2}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY310_UBUNTU_PSYCOPG2}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY311_UBUNTU_PSYCOPG2}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY312_UBUNTU_PSYCOPG2}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY313_UBUNTU_PSYCOPG2}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY39_UBUNTU_MSSQL}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY310_UBUNTU_MSSQL}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY311_UBUNTU_MSSQL}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY312_UBUNTU_MSSQL}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY313_UBUNTU_MSSQL}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY39_UBUNTU_PSYCOPG3}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY310_UBUNTU_PSYCOPG3}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY311_UBUNTU_PSYCOPG3}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY312_UBUNTU_PSYCOPG3}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY313_UBUNTU_PSYCOPG3}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY39_WINDOWS_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY310_WINDOWS_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY311_WINDOWS_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY312_WINDOWS_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo "${PY313_WINDOWS_SQLITE}" >> ${GITHUB_STEP_SUMMARY}
        echo '' >> ${GITHUB_STEP_SUMMARY}
        echo 'Please address any tests which have errored, failed, or xpassed, and any warnings emitted.' >> ${GITHUB_STEP_SUMMARY}
      env:
        PY39_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py39-ubuntu-sqlite }}
        PY310_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py310-ubuntu-sqlite }}
        PY311_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py311-ubuntu-sqlite }}
        PY312_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py312-ubuntu-sqlite }}
        PY313_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py313-ubuntu-sqlite }}
        PY314_UBUNTU_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py314-ubuntu-sqlite }}
        PY39_UBUNTU_PSYCOPG2: ${{ needs.tests.outputs.pytest-results-row-py39-ubuntu-psycopg2 }}
        PY310_UBUNTU_PSYCOPG2: ${{ needs.tests.outputs.pytest-results-row-py310-ubuntu-psycopg2 }}
        PY311_UBUNTU_PSYCOPG2: ${{ needs.tests.outputs.pytest-results-row-py311-ubuntu-psycopg2 }}
        PY312_UBUNTU_PSYCOPG2: ${{ needs.tests.outputs.pytest-results-row-py312-ubuntu-psycopg2 }}
        PY313_UBUNTU_PSYCOPG2: ${{ needs.tests.outputs.pytest-results-row-py313-ubuntu-psycopg2 }}
        PY39_UBUNTU_MSSQL: ${{ needs.tests.outputs.pytest-results-row-py39-ubuntu-mssql }}
        PY310_UBUNTU_MSSQL: ${{ needs.tests.outputs.pytest-results-row-py310-ubuntu-mssql }}
        PY311_UBUNTU_MSSQL: ${{ needs.tests.outputs.pytest-results-row-py311-ubuntu-mssql }}
        PY312_UBUNTU_MSSQL: ${{ needs.tests.outputs.pytest-results-row-py312-ubuntu-mssql }}
        PY313_UBUNTU_MSSQL: ${{ needs.tests.outputs.pytest-results-row-py313-ubuntu-mssql }}
        PY39_UBUNTU_PSYCOPG3: ${{ needs.tests.outputs.pytest-results-row-py39-ubuntu-psycopg3 }}
        PY310_UBUNTU_PSYCOPG3: ${{ needs.tests.outputs.pytest-results-row-py310-ubuntu-psycopg3 }}
        PY311_UBUNTU_PSYCOPG3: ${{ needs.tests.outputs.pytest-results-row-py311-ubuntu-psycopg3 }}
        PY312_UBUNTU_PSYCOPG3: ${{ needs.tests.outputs.pytest-results-row-py312-ubuntu-psycopg3 }}
        PY313_UBUNTU_PSYCOPG3: ${{ needs.tests.outputs.pytest-results-row-py313-ubuntu-psycopg3 }}
        PY39_WINDOWS_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py39-windows-sqlite }}
        PY310_WINDOWS_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py310-windows-sqlite }}
        PY311_WINDOWS_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py311-windows-sqlite }}
        PY312_WINDOWS_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py312-windows-sqlite }}
        PY313_WINDOWS_SQLITE: ${{ needs.tests.outputs.pytest-results-row-py313-windows-sqlite }}

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.x"

    - name: Download coverage data
      uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
      with:
        pattern: coverage-data-*
        merge-multiple: true

    - name: Setup uv
      uses: astral-sh/setup-uv@7edac99f961f18b581bbd960d59d049f04c0002f # v6.4.1
      with:
        version: ">=0.6.15"

    - name: Install Nox
      env:
        UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/resources/constraints.txt
      run: |
        uv tool install nox

    - name: Combine coverage data and display human readable report
      run: |
        nox -rs coverage -- combine --debug=pathmap
        nox -rs coverage -- report --show-missing --ignore-errors

    - name: Create coverage report
      run: |
        nox -rs coverage -- xml --ignore-errors

    - name: Upload coverage report
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
      uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3

  mypy:
    name: "Static type checking"
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        persist-credentials: false

    - name: Setup Python
      uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
      with:
        python-version: "3.x"

    - name: Setup uv
      uses: astral-sh/setup-uv@7edac99f961f18b581bbd960d59d049f04c0002f # v6.4.1
      with:
        version: ">=0.6.15"

    - name: Install Nox
      env:
        UV_CONSTRAINT: ${{ github.workspace }}/.github/workflows/resources/constraints.txt
      run: |
        uv tool install nox

    - name: Run mypy
      run: |
        nox -rs mypy

name: Build and Publish to PyPI

on:
  push:
  release:
    types: [published]

permissions:
  contents: write  # Needed to upload artifacts to the release
  id-token: write  # Needed for OIDC PyPI publishing

jobs:
  build:
    name: Build artifacts
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.baipp.outputs.package_version }}

    steps:
    - name: Check out the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup uv
      uses: astral-sh/setup-uv@d4b2f3b6ecc6e67c4457f6d3e41ec42d3d0fcb86 # v5.4.2
      with:
        version: ">=0.6.15"

    - name: Set up Python
      uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
      with:
        python-version: 3.x

    - name: Check version
      if: github.event_name == 'release' && github.event.action == 'published'
      run: |
        version=$(uvx --from toml-cli toml get --toml-path=pyproject.toml project.version)
        tag=$(echo "${{ github.ref }}" | awk '{split($0,p,"/"); print p[3]}')
        if [ "v$version" != $tag ]; then echo "Release tag ('$tag') and package version ('v$version') do not match!"; exit 1; fi;

    - name: uv install
      # Required to run `alembic_freeze.py`
      run: |
        uv sync

    - name: Freeze DB
      run: |
        uv run scripts/alembic_freeze.py

    - name: Release Marker
      if: github.event_name == 'release' && github.event.action == 'published'
      # The release marker differentiates installations 'in the wild' versus internal dev builds and tests
      run: touch src/meltano/core/tracking/.release_marker

    - name: Build distribution
      uses: hynek/build-and-inspect-python-package@b5076c307dc91924a82ad150cdd1533b444d3310 # v2.12.0
      id: baipp

  pypi_release:
    name: Publish to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: publishing
      url: https://pypi.org/project/meltano/${{ needs.build.outputs.version }}

    steps:
    - name: Check out the repository
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Download artifacts
      uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
      with:
        name: Packages
        path: dist

    - name: Upload wheel to release
      uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd # 2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/*.whl
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true

    - name: Publish
      uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

requirements.txt: ""
meltano.yml: |
  plugins:
    connections:
      - name: sqlite
      - name: postgresql
  version: 1.0
  send_anonymous_usage_stats: True
README.md: ""
.env: |
  SQLITE_DATABASE=meltano
  PG_PASSWORD=warehouse
  PG_USERNAME=warehouse
  PG_ADDRESS=localhost
  PG_SCHEMA=meltano
  PG_PORT=5502
  PG_DATABASE=warehouse
.gitignore: |
  /venv
  /.meltano
  .env
model/.gitkeep: ""
extract/.gitkeep: ""
docker-compose.yml: |
  version: '3.1'
  services:
    meltano:
      image: meltano/meltano
      working_dir: /project
      volumes:
        - ./:/project
      ports:
        - '5000:5000'
    warehouse_db:
      image: postgres
      environment:
        POSTGRES_DB: warehouse
        POSTGRES_PASSWORD: warehouse
        POSTGRES_USER: warehouse
      ports:
      - '5502:5432'
load/.gitkeep: ""
transform/:
  dbt_project.yml: |
    name: 'my_meltano_project'
    version: '1.0'
    profile: 'meltano'
    source-paths: ["models"]
    analysis-paths: ["analysis"]
    test-paths: ["tests"]
    data-paths: ["data"]
    macro-paths: ["macros"]
    target-path: "../.meltano/transformers/dbt/target"  # directory which will store compiled SQL files
    clean-targets:                                      # directories to be removed by `dbt clean`
        - "../.meltano/transformers/dbt/target"
        - "dbt_modules"
    models:
        my_meltano_project: null
  profile/profiles.yml: |
    config:
      send_anonymous_usage_stats: False
      use_colors: True
    meltano:
      target: postgres
      outputs:
        postgres:
          type: postgres
          threads: 2
          host: "{{ env_var('PG_ADDRESS') }}"
          port: "{{ env_var('PG_PORT') }}"
          user: "{{ env_var('PG_USERNAME') }}"
          pass: "{{ env_var('PG_PASSWORD') }}"
          dbname: "{{ env_var('PG_DATABASE') }}"
          schema: "{{ env_var('DBT_SCHEMA', 'analytics') }}"
  models/my_meltano_project/.gitkeep: ""
analyze/.gitkeep: ""
notebook/.gitkeep: ""
orchestrate/dags: "bundle://dags"

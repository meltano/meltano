getting_started_windows:
  extends: .windows:defaults
  stage: test
  tags:
    - shared-windows
    - windows
    - windows-1809
  before_script:
    - Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
    - choco install -y python --version=3.8.9
    - RefreshEnv
  script:
    # Testing Windows installation steps from
    # https://docs.meltano.com/guide/installation
    # Close to a 1-1 with ./sample_code.gitlab-ci.yml

    # Alias Equivalent for Windows
    - New-Alias Python3 Python

    # Create directory for Meltano projects
    - mkdir meltano-projects
    - cd meltano-projects

    # Install pipx package manager
    - python3 -m pip install --user pipx
    - python3 -m pipx ensurepath
    # Update path to include pipx
    - RefreshEnv

    # Install meltano using the current source code for this build
    - pipx install ..


    ### https://docs.meltano.com/concepts/project

    # Initialize a new Meltano project
    - meltano init demo-project

    # Before using a `meltano` command, ensure that:
    # - you have navigated to your Meltano project
    - cd demo-project

    ### ---
    # Always use the latest discovery file
    #- ln -s ../../src/meltano/core/bundle/discovery.yml
    - New-Item -Type SymbolicLink -Path "discovery.yml" -Target "../../src/meltano/core/bundle/discovery.yml" -Force
    ### ---


    ### https://docs.meltano.com/guide/integration

    # Add GitLab extractor to your project
    - meltano add extractor tap-gitlab

    # Configure tap-gitlab to extract data from...
    # - the https://gitlab.com/meltano/meltano project
    - meltano config tap-gitlab set projects meltano/meltano
    # - going back to May 1st, 2020
    - meltano config tap-gitlab set start_date 2021-03-01T00:00:00Z

    # Select all attributes of the "tags" entity
    - meltano select tap-gitlab tags "*"

    # Add JSONL loader
    - meltano add loader target-jsonl

    # Run data integration pipeline
    - meltano run tap-gitlab target-jsonl

    # Read latest tag
    - Get-Content .\output\tags.jsonl -First 1

  after_script:
    - echo "If this pipeline failed due to Gitlab API returning a non-2xx status code you can try rerunning this job."
    - echo "If the failure persists or you're encountering another error feel free reach out via Gitlab or Slack."

  artifacts:
    paths:
      - meltano-projects/demo-project/meltano.yml
      - meltano-projects/demo-project/output
    when: always

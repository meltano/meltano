{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "JSON Schema for meltano.yml",
  "description": "Meltano (https://meltano.com) is an open source platform for building, running & orchestrating ELT pipelines",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "version": {
      "const": 1
    },
    "send_anonymous_usage_stats": {
      "type": "boolean",
      "description": "Share anonymous usage data with the Meltano team to help them gauge interest and allocate development time",
      "default": true
    },
    "project_id": {
      "type": "string",
      "description": "A globally unique project identifier"
    },
    "discovery_url": {
      "type": "string",
      "description": "URL to remote manifest of Meltano plugins, used by meltano discover. Set to 'false' to disable.",
      "default": "https://www.meltano.com/discovery.yml"
    },
    "plugins": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "dashboards": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/dashboard" }
        },
        "extractors": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/extractor" }
        },
        "files": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/file" }
        },
        "loaders": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/loader" }
        },
        "models": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/model" }
        },
        "orchestrators": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/orchestrator" }
        },
        "transformers": {
          "type": "array",
          "items": { "$ref": "#/definitions/plugins/transform" }
        }
      }
    },
    "schedules": {
      "type": "array",
      "items": { "$ref": "#/definitions/orchestration_schedule" },
      "description": "Scheduled ELT jobs, added using 'meltano schedule'"
    }
  },
  "definitions": {
    "plugins": {
      "base": {
        "type": "object",
        "allOf": [
          { "$ref": "#/definitions/plugins/base_properties" },
          {
            "oneOf": [
              {
                "if": {
                  "required": ["namespace"],
                  "properties": {
                    "namespace": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                },
                "then": {
                  "additionalProperties": true,
                  "$ref": "#/definitions/plugins/base_properties_custom"
                },
                "else": {
                  "additionalProperties": false,
                  "properties": {
                    "name": {},
                    "pip_url": {},
                    "config": {},
                    "select": {},
                    "metadata": {},
                    "schema": {},
                    "vars": {},
                    "update": {}
                  }
                }
              }
            ]
          }
        ]
      },
      "base_properties": {
        "type": "object",
        "required": ["name", "pip_url"],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the plugin",
            "examples": ["tap-csv", "target-jsonl", "airflow"]
          },
          "namespace": {
            "type": "string",
            "description": "The namespace of this plugin",
            "examples": ["tap_csv", "target_jsonl"]
          },
          "pip_url": {
            "type": "string",
            "description": "The pip hosted package name or URL",
            "examples": ["target-jsonl", "git+https://gitlab.com/meltano/tap-facebook.git", "wtforms==2.2.1 apache-airflow==1.10.2"]
          },
          "config": {
            "type": "object",
            "description": "Your plugin configuration, type 'meltano config <plugin> list' for details"
          }
        }
      },
      "base_properties_custom": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "A user friendly label describing the plugin",
            "examples": ["Stripe", "Facebook Ads"]
          },
          "logo_url": {
            "type": "string",
            "description": "An optional logo URL for this plugin"
          },
          "executable": {
            "type": "string",
            "description": "The plugin's executable name, as defined in setup.py (if a Python based plugin)",
            "examples": ["tap-stripe", "tap-covid-19"]
          },
          "capabilities": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "properties",
                "catalog",
                "discover",
                "state"
              ]
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/base_setting"
            }
          },
          "docs": {
            "type": "string",
            "description": "A URL to the documentation for this plugin"
          },
          "settings_group_validation": {
            "type": "array",
            "items": {
              "type": "array",
              "description": "A set consisting of one valid combination of required setting names",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "dashboard": { "$ref": "#/definitions/plugins/base" },
      "extractor": {
        "description": "https://www.meltano.com/plugins/extractors/#extractors-data-sources",
        "allOf": [
          {"$ref": "#/definitions/plugins/base"},
          {
            "properties": {
              "metadata": {
                "type": "object",
                "description": "An object containing Singer stream and property metadata",
                "default": {}
              },
              "schema": {
                "type": "object",
                "description": "An object representing override rules for a Singer stream schema",
                "default": {}
              },
              "select": {
                "type": "array",
                "default": ["*.*"],
                "description": "An array of entity selection rules in the form '<entity|*>.<attribute|*>'",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "file": {
        "allOf": [
          {"$ref": "#/definitions/plugins/base"},
          {
            "properties": {
              "update": {
                "type": "object",
                "additionalProperties": {
                  "type": "boolean"
                }
              }
            }
          }
        ]
      },
      "loader": { "$ref": "#/definitions/plugins/base" },  
      "model": { "$ref": "#/definitions/plugins/base" },
      "orchestrator": {"$ref": "#/definitions/plugins/base"},
      "transform": {
        "allOf": [
          {"$ref": "#/definitions/plugins/base"},
          {
            "properties": {
              "vars": {
                "description": "An object containing dbt model variables"
              }
            }
          }
        ]
      }
    },
    "base_setting": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the setting",
          "examples": ["account_id"]
        },
        "aliases": {
          "type": "array",
          "description": "Alternative setting names that can be used in 'meltano.yml' and 'meltano config set'",
          "examples": ["accountId", "account_identifier"],
          "items": {
            "type": "string"
          }
        },
        "label": {
          "type": "string",
          "description": "A user friendly label for the setting",
          "examples": ["Account ID"]
        },
        "value": {
          "description": "The default value of this setting if not otherwise defined"
        },
        "placeholder": {
          "type": "string",
          "description": "A placeholder value for this setting",
          "examples": ["Ex. 18161"]
        },
        "kind": {
          "type": "string",
          "description": "The type of value this setting contains",
          "enum": [
            "oauth",
            "hidden",
            "password",
            "date_iso8601",
            "file",
            "email",
            "integer",
            "options",
            "object",
            "array",
            "boolean"
          ]
        },
        "description": {
          "type": "string",
          "description": "A description for what this setting does",
          "examples": ["The unique account identifier for your Stripe Account"]
        },
        "tooltip": {
          "type": "string",
          "description": "A phrase to provide additional information on this setting",
          "examples": ["Here is some additional info..."]
        },
        "documentation": {
          "type": "string",
          "description": "A link to documentation on this setting",
          "examples": ["https://meltano.com/"]
        },
        "protected": {
          "type": "boolean",
          "description": "A protected setting cannot be changed from the UI",
          "default": false
        },
        "env": {
          "type": "string",
          "description": "The environment variable name this setting can be configured with",
          "examples": ["GITLAB_API_TOKEN", "FACEBOOK_ADS_ACCESS_TOKEN"]
        },
        "env_aliases": {
          "type": "array",
          "description": "Use to delegate alternative environment variables for overriding this setting's value",
          "examples": ["TAP_ACCOUNT_ID", "TAP_ACCOUNT_IDENTIFIER"],
          "items": {
            "type": "string"
          }
        },
        "value_processor": {
          "const": "nest_object",
          "description": "Use with `kind: object` to automatically nest flattened keys"
        },
        "oauth": {
          "type": "object",
          "required": ["provider"],
          "properties": {
            "provider": {
              "type": "string",
              "description": "The name of a Meltano-supported OAuth provider",
              "examples": ["google-adwords"]
            }
          }
        }
      }
    },
    "base_settings": {
      "type": "array",
      "items": { "$ref": "#/definitions/base_setting" }
    },
    "orchestration_schedule": {
      "type": "object",
      "required": ["name", "extractor", "loader", "transform", "interval", "start_date"],
      "description": "https://www.meltano.com/docs/orchestration.html#orchestration",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "The schedule's unique name",
          "examples": ["gitlab-to-jsonl"]
        },
        "extractor": {
          "type": "string",
          "description": "The name of the extractor plugin",
          "examples": ["tap-gitlab"]
        },
        "loader": {
          "type": "string",
          "description": "The name of the loader plugin",
          "examples": ["target-jsonl"]
        },
        "interval": {
          "type": "string",
          "description": "A UNIX cron expression to represent the frequency the scheduled job should execute",
          "examples": ["@hourly", "@daily", "@weekly"],
          "pattern": "^(@(hourly|daily|weekly|monthly|yearly|once))$"
        },
        "transform": {
          "type": "string",
          "description": "Describes if transforms should run, be skipped, or if only transforms should execute (skip extractors and loaders)",
          "default": "skip",
          "enum": ["run", "skip", "only"]
        },
        "start_date": {
          "type": "string",
          "description": "The date when the schedule should first execute",
          "examples": ["2020-08-06 00:00:00"]
        }
      }
    }
  }
}
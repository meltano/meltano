[tool.poetry]
name = "meltano"
version = "2.5.0"
description = "Meltano: Your DataOps Platform Infrastructure"
authors = ["Meltano <hello@meltano.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/meltano/meltano"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
# Explicitly include non-Python files and gitignored files:
include = [
  "LICENSE",
  "*.m5o",
  "src/meltano/api/static/css/*",
  "src/meltano/api/static/js/*",
  "src/meltano/api/templates/embed.html",
  "src/meltano/api/templates/webapp.html",
  "src/meltano/core/tracking/.release_marker",
]

[tool.poetry.dependencies]
aiodocker = "^0.21.0"
aiohttp = "^3.4.4"
alembic = "^1.5.0"
atomicwrites = "^1.2.1"
authlib = "^1.0.1"
cached-property = "^1" # Remove after Python 3.7 support is dropped
backoff = "^2.1.2"
bcrypt = "^3.2.0" # Needs to be installed explicitly so it can be used as a backend for passlib
click = "^8.1"
click-default-group = "^1.2.1"
croniter = "^1.3.5"
email-validator = "^1.1.2"
fasteners = "^0.17.3"
flask = "^2.1"
flask-cors = "^3.0.7"
flask-executor = "^0.10"
flask-login = "==0.6.1" # https://github.com/meltano/meltano/issues/6548
flask-restful = "^0.3.7"
flask-sqlalchemy = "^2.4.4"
flatten-dict = "^0"
gunicorn = "^20.1.0"
jsonschema = "^4.9"
markdown = "^3.3.7"
meltano-flask-security = "^0.1.0"
packaging = "^21.3"
psutil = "^5.6.3"
psycopg2-binary = "^2.8.5"
pyhumps = "^3.0.0"
pymssql = {version = "^2.2.5", optional = true}
python = ">=3.7,<3.11"
python-dotenv = "^0.20.0"
python-gitlab = "^3.5.0"
pyyaml = "^5.3.1"
requests = "^2.23.0"
"ruamel.yaml" = "^0.17.21"
smtpapi = "^0.4.1"
snowplow-tracker = "^0.10.0"
sqlalchemy = "^1.3.19"
structlog = "^21.2.0"
tzlocal = "^4.2.0"
uvicorn = {extras = ["standard"], version = "^0.17.6"}
werkzeug = ">=2.1,<=2.1.3"

[tool.poetry.extras]
infra = ["ansible"]
mssql = ["pymssql"]
repl = ["ipython"]

[tool.poetry.dev-dependencies]
black = "^22.3.0"
bumpversion = "^0.6.0"
changelog-cli = "^0.6.2"
colorama = "^0.4.4"
coverage = {extras = ["toml"], version = "^6.4.1"}
commitizen-version-bump = { git = "https://github.com/meltano/commitizen-version-bump.git", branch = "main" }
freezegun = "^0.3.12"
isort = "^5.10.1"
mock = "^4.0.3"
mypy = "^0.960"
pre-commit = "^2.9.2"
pylint = "^2.12.2"
pytest = "^7.1.2"
pytest-asyncio = "^0.18.3"
pytest-cov = "^3.0.0"
pytest-docker = "^1.0"
pyupgrade = "^2.29.1"
requests-mock = "^1.6.0"
tox = "^3.24.4"
wemake-python-styleguide = "^0.16.1"

[tool.poetry.scripts]
meltano = "meltano.cli:main"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
src_paths = [
  "src/",
  "tests/",
]
skip_glob = [
  "*.md",
  "*.vue",
  "*.js",
  "src/meltano/migrations/versions/*",
]
add_imports = [
    "from __future__ import annotations",
]

[tool.coverage.run]
concurrency = [
  "multiprocessing",
  "thread",
]
parallel = true
branch = true
source = ["meltano"]

[tool.coverage.paths]
source = [
  "src/meltano",
  "**/site-packages/meltano",
  "**/site-packages/meltano*/meltano",
]

[tool.coverage.report]
show_missing = true
skip_covered = true
precision = 2
exclude_lines = [
    "if TYPE_CHECKING:",
]

[tool.commitizen]
name = "cz_version_bump"
version = "2.5.0"
tag_format = "v$major.$minor.$patch$prerelease"
version_files = [
    "pyproject.toml:^version =",
    "src/meltano/__init__.py:^__version__ =",
    'package.json:^  "version":',
    'src/webapp/package.json:^  "version":',
    'docs/package.json:^  "version":',
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

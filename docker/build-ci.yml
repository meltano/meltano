.docker_build_before_script: &docker_build_before_script |
  apk add git
  export BASE_SHA=$(git hash-object requirements.txt)
  echo Building Meltano on $BASE_SHA

.docker_build_script: &docker_build_script |
  export DOCKER_IMAGE_NAME=${IMAGE_NAME:-$CI_REGISTRY_IMAGE}
  export DOCKER_IMAGE_TAG=${IMAGE_TAG:-$CI_COMMIT_SHA}
  docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  docker build -t $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG -f $DOCKERFILE $EXTRA_ARGS .
  docker push $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG

.docker_build: &docker_build
  image: docker:latest
  variables:
    DOCKERFILE: .
    DOCKER_DRIVER: overlay2
  services:
    - docker:dind
  before_script:
    - *docker_build_before_script
  script:
    - *docker_build_script

###############
# Build Base  #
###############

# the meltano base should only be rebuild when the `requirements.txt` file
# has a change, and should be inferable from the `BASE_SHA` environment
# variable

# Manages:
#  - meltano/meltano/base:<base_sha>
meltano_base: &meltano_base
  <<: *docker_build
  stage: build-base
  variables:
    DOCKERFILE: docker/base/Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE/base
  before_script:
    - *docker_build_before_script
    - export IMAGE_TAG=$BASE_SHA
  only:
    changes:
      - docker/base/Dockerfile
      - requirements.txt

#############
# Build     #
#############

# Manages:
#  - meltano/meltano:<sha>
meltano_dev:
  <<: *docker_build
  stage: build-meltano
  variables:
    DOCKERFILE: docker/prod/Dockerfile
  before_script:
    - *docker_build_before_script
    - export EXTRA_ARGS="--build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$BASE_SHA"
  except:
    - master
    - tags
  artifacts:
    paths:
      - dist

# Manages:
#  - meltano/meltano:<sha>
#  - meltano/meltano:edge
meltano_edge:
  <<: *docker_build
  stage: build-meltano
  variables:
    DOCKERFILE: docker/prod/Dockerfile
  before_script:
    - *docker_build_before_script
    - export EXTRA_ARGS="--build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$BASE_SHA"
  script:
    - *docker_build_script
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:edge
    - docker push $DOCKER_IMAGE_NAME:edge
  only:
    - master
  except:
    - tags
  artifacts:
    paths:
      - dist

# Manages:
#  - meltano/meltano:<sha>
#  - meltano/meltano:<tag>
#  - meltano/meltano:latest
meltano:
  <<: *docker_build
  stage: build-meltano
  variables:
    DOCKERFILE: docker/prod/Dockerfile
  before_script:
    - *docker_build_before_script
    - export EXTRA_ARGS="--build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE/base:$BASE_SHA"
  script:
    - *docker_build_script
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:latest
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $DOCKER_IMAGE_NAME:latest
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v*/
  artifacts:
    paths:
      - dist

# Manages:
#   - meltano/meltano/runner:<sha>
#   - meltano/meltano/runner:edge
runner_edge:
  <<: *docker_build
  stage: build-runner
  variables:
    DOCKERFILE: $CI_PROJECT_DIR/docker/runner/Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE/runner
    EXTRA_ARGS: "--build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE:edge"
  script:
    - *docker_build_script
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:edge
    - docker push $DOCKER_IMAGE_NAME:edge
  only:
    - master

# Manages:
#   - meltano/meltano/runner:<tag>
#   - meltano/meltano/runner:latest
runner:
  <<: *docker_build
  stage: build-runner
  variables:
    DOCKERFILE: $CI_PROJECT_DIR/docker/runner/Dockerfile
    IMAGE_NAME: $CI_REGISTRY_IMAGE/runner
    IMAGE_TAG: latest
    EXTRA_ARGS: "--build-arg BASE_IMAGE=$CI_REGISTRY_IMAGE"
  script:
    - *docker_build_script
    - docker tag $DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $DOCKER_IMAGE_NAME:$CI_COMMIT_TAG
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG =~ /^v*/

##########
# Tests  #
##########

.test_docker: &test_docker
  stage: test
  image:
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    entrypoint: [""]
  script:
    - mkdir -p /meltano_projects && cd /meltano_projects
    - meltano init --no_usage_stats carbon && cd carbon
    - meltano elt tap-carbon-intensity target-sqlite
